<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.github.wangyi</groupId>
  <artifactId>dubbo-web</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>
  
  <parent>
  	<groupId>com.github.wangyi</groupId>
  	<artifactId>mq-parent</artifactId>
  	<version>1.0-SNAPSHOT</version>
  	<relativePath>../mq-parent/pom.xml</relativePath>
  </parent>
  
  <dependencies>
  	<!-- mq-web-commons -->
	  	<dependency>
	  		 <groupId>com.github.wanyi</groupId>
			 <artifactId>mq-web-commons</artifactId>
			 <version>1.0-SNAPSHOT</version>
	  	</dependency>
	 
	<!-- 基于阿里巴巴Dubbo服务治理平台引入的核心dubbo-2.5.3jar和zookepper.jar和zkclient.jar和javassist.jar 和netty.jar-->
	   <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>dubbo</artifactId>
            <version>2.5.3</version>
            <scope>system</scope>
            <systemPath>D:\data\libs\dubbo-2.5.3.jar</systemPath>
        </dependency>
		
		
		 <dependency>
            <groupId>org.apache.zookeeper</groupId>
			<artifactId>zookeeper</artifactId>
			<version>3.4.6</version>
			<systemPath>D:\data\libs\zookeeper-3.4.6.jar</systemPath>
       		<scope>system</scope>
        </dependency>
        <dependency>
		    <groupId>com.github.sgroschupf</groupId>
		    <artifactId>zkclient</artifactId>
		    <version>0.1</version>
	    </dependency>
        <!-- Curator是Netflix开源的一套ZooKeeper客户端框架. -->
		<dependency>
		    <groupId>org.apache.curator</groupId>
		    <artifactId>curator-framework</artifactId>
		    <version>2.8.0</version>
		</dependency>

	
        <dependency>
	     	 <groupId>com.github.sgroschupf</groupId>
			 <artifactId>zkclient</artifactId>
			 <version>0.3</version>
			 <systemPath>D:\data\libs\zkclient-0.3.jar</systemPath>
			 <scope>system</scope>
        </dependency>
      
	    <dependency>
		    <groupId>org.javassist</groupId>
		    <artifactId>javassist</artifactId>
		    <version>3.18.1-GA</version>
		</dependency>
      
	    <dependency>
		    <groupId>io.netty</groupId>
		    <artifactId>netty</artifactId>
		    <version>3.10.5.Final</version>
		</dependency>
	
		<!-- cglib是第三方的动态代理类库 -->
		<dependency>
	    <groupId>cglib</groupId>
	    <artifactId>cglib-nodep</artifactId>
	    <version>2.2.2</version>
		</dependency>
		
		<!-- 基于hessian协议开发 -->
		<!-- https://mvnrepository.com/artifact/com.caucho/hessian -->
		<dependency>
		    <groupId>com.caucho</groupId>
		    <artifactId>hessian</artifactId>
		    <version>4.0.7</version>
		</dependency>
		<!-- 配置服务器为jetty时候需要threadpool -->
		<dependency>
		    <groupId>org.mortbay.jetty</groupId>
		    <artifactId>jetty-threadpool</artifactId>
		    <version>7.0.0pre2</version>
		</dependency>
		<dependency>
		    <groupId>org.mortbay.jetty</groupId>
		    <artifactId>reverse-http-connector</artifactId>
		    <version>8.1.16.v20140903</version>
		</dependency>
		
		<!-- 基于cxf webservice协议开发依赖jar -->
		<dependency>
		    <groupId>org.apache.cxf</groupId>
		    <artifactId>cxf-rt-frontend-simple</artifactId>
		    <version>2.6.1</version>
		    <systemPath>D:\data\libs\cxf-rt-frontend-simple-2.6.1.jar</systemPath>
		    <scope>system</scope>
		</dependency>
		<dependency>
		    <groupId>org.apache.cxf</groupId>
		    <artifactId>cxf-rt-transports-http</artifactId>
		    <version>3.1.8</version>
		    <systemPath>D:\data\libs\cxf-rt-transports-http-2.6.1.jar</systemPath>
		    <scope>system</scope> 
		</dependency> 
		<dependency>
		    <groupId>javax.ws.rs</groupId>
		    <artifactId>jsr311-api</artifactId>
		    <version>1.1.1</version>
		</dependency>
		
		<!-- 基于Facebook的Thrift协议发布服务 -->
		<dependency>
		  <groupId>org.apache.thrift</groupId>
		  <artifactId>libthrift</artifactId>
		  <version>0.9.3</version>
		</dependency>
		
		<!-- 依赖Swift协议，也是Facebook，本次使用0.6.0 简化了IDL -->
		<dependency>
			<groupId>com.facebook.swift</groupId>
			<artifactId>swift-codec</artifactId>
			<version>0.6.0</version>
		</dependency>
		
		<dependency>
		    <groupId>com.facebook.swift</groupId>
		    <artifactId>swift-service</artifactId>
		    <version>0.6.0</version>
		    <systemPath>D:\data\libs\swift-service-0.14.1.jar</systemPath>
		    <scope>system</scope>
		</dependency>
		
		<dependency>
		    <groupId>com.facebook.nifty</groupId>
		    <artifactId>nifty-client</artifactId>
		    <version>0.13.1</version>
		    <systemPath>D:\data\libs\nifty-client-0.13.1.jar</systemPath>
		    <scope>system</scope>
		</dependency>
		
		<dependency>
		    <groupId>com.facebook.nifty</groupId>
		    <artifactId>nifty-core</artifactId>
		    <version>0.13.1</version>
		    <systemPath>D:\data\libs\nifty-core-0.13.1.jar</systemPath>
		    <scope>system</scope>
		</dependency>
         
		
  </dependencies>
  
  
  <build>
		<!-- 部署成ROOT名字显示成ROOT即可 -->
        <finalName>ROOT</finalName>
        <plugins>
        	<!-- Jetty8进行开发调试 -->
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>8.1.8.v20121106</version>
                <configuration>
                   <webAppConfig>
                       <contextPath>/${project.build.finalName}</contextPath>
                   </webAppConfig>
                  <connectors>
                  		<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
                  			<port>10080</port>
                  			<maxIdleTime>60000</maxIdleTime>
                  		</connector>
                  </connectors>
                <reload>automatic</reload>
                <scanIntervalSeconds>10</scanIntervalSeconds>
                <systemProperties>
                	<systemProperty>
                		<name>org.mortbay.util.URI.charset</name>
                		<value>UTF-8</value>
                	</systemProperty>
                </systemProperties>
                <jvmArgs>-Xmx512m -XX:PermSize=128m -XX:MaxPermSize=256m-Dfile.encoding=UTF-8</jvmArgs>
                </configuration>
            </plugin>

			<!-- tomcat7进行热部署至远程 -->
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                	<url>http://localhost:10080/manager/text</url>
                    <path>/${project.build.finalName}</path>
                 	<username>tomcat</username>
                 	<password>tomcat</password>
                </configuration>
            </plugin>
            
            <!-- 部署时候跳过Test -->
              <plugin>  
		        <groupId>org.apache.maven.plugins</groupId>  
		        <artifactId>maven-surefire-plugin</artifactId>  
		        <configuration>  
		          <skip>true</skip>  
		        </configuration>  
		      </plugin> 
        </plugins>

    </build>
  
</project>